<!DOCTYPE HTML>
<html>
<head>
<meta charset="UTF-8">
<title>font-size</title>
<!--[if lt IE 9]>
<script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"></script>
<![endif]-->
<style>
aside, article, section, header, footer, nav {
	display: block;
}
body {
	width: 600px;
	font-family: Georgia, "Times New Roman", Times, serif;
	font-size: 90%;
}
/*add styles here*/
h1 {
	font-size: 1.6em;
}
p {
	font-size: 1em;
}
</style>
</head>
<body>
<article>
<h1>Setting the font-family property.</h1>
<p>Designers can now choose between system fonts, and web fonts when defining which fonts to use on a page. System fonts are the common fonts shipped with most operating systems; fonts such as Arial, Helvetica, Verdana, Georgia, Times New Roman, and others. When using system fonts, you are relying on the client machine to have the font installed. This saves overhead, and allows you to rely on fonts that have a long and solid track record.</p>
<p>Web fonts, on the other hand, allow designers to use the @font-face inline rule to define a font-family to use within the page. The font is an external resource that the browser then requests and uses on the page. This allows designers to use any font they want, without having to worry about whether or not it's installed on the client machine. This technique requires that the designer either host the font themselves, or use one of the many font hosting services available. For more information on @font-face, check out my lynda.com title, <a href="http://www.lynda.com/Web-Design-tutorials/web-fonts-first-look/73564-2.html" target="_blank" title="Web Fonts First Look">Web Fonts First Look.</a></p>
</article>
</body>
</html>
